<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="userSQL">
 	<!-- mybatis-config.xml에서 Alias 잡아줬으니 user.bean.UserDTO 대신 user써도 됨 -->
 	<insert id="write" parameterType="user">
 		insert into usertable values(#{name}, #{id}, #{pwd})
 	</insert>
 	
 	<select id="getUserList" resultType="user">
 	 select * from usertable
 	</select>
 	
	<select id="getUser" parameterType="java.lang.String" resultType="user">
 		select * from usertable where id=#{id}
 	</select>
 	<update id="update" parameterType="user">
 		update usertable set name=#{name}, pwd=#{pwd} where id=#{id}
 	</update>
 </mapper>
 
 <!-- 
@Override
public void write(UserDTO userDTO) {
	Map<String, String> map = new HashMap<String, String>();
	map.put("name", userDTO.getName());
	map.put("id", userDTO.getId());
	map.put("pwd", userDTO.getPwd());
	
	// NamedParameterJdbcDaoSupport는 ?에 직접 컬럼명 입력 가능
	String sql = "insert into usertable values(:name, :id, :pwd)";
	getNamedParameterJdbcTemplate().update(sql, map);
}

@Override
public List<UserDTO> getUserList() {
	String sql = "select * from usertable";
	// NamedParameterJdbcDaoSupport의 부모가 JdbcTemplate이기때문에 이대로 사용해도 문제x
	return getJdbcTemplate().query(sql, new BeanPropertyRowMapper<>(UserDTO.class)); 
		// 디비에서 꺼내서 DTO 클래스와 연동을 해라라고 선언 후 리스트로 꺼내라고 선언
}

@Override
public UserDTO getUser(String id) {
	String sql = "select * from usertable where id=?";
	try {			
		return getJdbcTemplate().queryForObject(sql, new BeanPropertyRowMapper<UserDTO>(UserDTO.class), id); 
		// queryForObject : 한 사람 분량의 데이터 꺼내올 때 사용 (마지막 인자값에 id="?"에 해당하는 컬럼명을 적어줘야함
	} catch(EmptyResultDataAccessException e) {
		// 해당 에러가 나면 에러메시지를 찍지 말고 null을 리턴하게 함 (EmptyResultDataAccessException : 해당 입력값이 없을 때 나는 에러)
		return null;
	}
}

@Override
public void update(Map<String, String> map) {
	String sql = "update usertable set name=:name, pwd=:pwd where id=:id";
	getNamedParameterJdbcTemplate().update(sql, map);
}

@Override
public void delete(String id) {
	String sql = "delete from usertable where id=:id";
	getJdbcTemplate().update(sql, id);
} 
-->
 	